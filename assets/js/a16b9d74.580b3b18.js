"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[1607],{8453:(e,n,a)=>{a.d(n,{R:()=>o,x:()=>c});var s=a(6540);const r={},i=s.createContext(r);function o(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(i.Provider,{value:n},e.children)}},9650:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>t});const s=JSON.parse('{"id":"\ud83d\udcbb Consola y Depuraci\xf3n/Depuraci\xf3n con breakpoints","title":"Depuraci\xf3n con Breakpoints","description":"El uso de breakpoints (puntos de interrupci\xf3n) es una t\xe9cnica fundamental para la depuraci\xf3n de c\xf3digo JavaScript. Los breakpoints permiten pausar la ejecuci\xf3n del c\xf3digo en un punto espec\xedfico y examinar el estado de las variables, el flujo de ejecuci\xf3n y la pila de llamadas. Esta t\xe9cnica es especialmente \xfatil cuando el c\xf3digo no se comporta como se espera, ya que te permite inspeccionar cada parte del proceso en detalle.","source":"@site/docs/\ud83d\udcbb Consola y Depuraci\xf3n/Depuraci\xf3n con breakpoints.md","sourceDirName":"\ud83d\udcbb Consola y Depuraci\xf3n","slug":"/\ud83d\udcbb Consola y Depuraci\xf3n/Depuraci\xf3n con breakpoints","permalink":"/docusaurus/docs/\ud83d\udcbb Consola y Depuraci\xf3n/Depuraci\xf3n con breakpoints","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/\ud83d\udcbb Consola y Depuraci\xf3n/Depuraci\xf3n con breakpoints.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Errores y Mensajes de JavaScript","permalink":"/docusaurus/docs/\ud83d\udcbb Consola y Depuraci\xf3n/Errores y mensajes de JavaScript"},"next":{"title":"Solicitudes de Red","permalink":"/docusaurus/docs/\ud83c\udf10 An\xe1lisis de Red/Solicitudes de red"}}');var r=a(4848),i=a(8453);const o={},c="Depuraci\xf3n con Breakpoints",l={},t=[{value:"\ud83d\uded1 \xbfQu\xe9 son los Breakpoints?",id:"-qu\xe9-son-los-breakpoints",level:2},{value:"\ud83e\udde9 C\xf3mo Usar Breakpoints en el Inspector de Elementos",id:"-c\xf3mo-usar-breakpoints-en-el-inspector-de-elementos",level:2},{value:"\ud83d\udeb6\u200d\u2642\ufe0f C\xf3mo Funciona la Ejecuci\xf3n con Breakpoints",id:"\ufe0f-c\xf3mo-funciona-la-ejecuci\xf3n-con-breakpoints",level:2},{value:"\u2699\ufe0f Opciones Adicionales al Usar Breakpoints",id:"\ufe0f-opciones-adicionales-al-usar-breakpoints",level:2},{value:"\ud83e\uddd1\u200d\ud83d\udcbb Consejos para Depurar con Breakpoints",id:"-consejos-para-depurar-con-breakpoints",level:2},{value:"\ud83d\udd04 Eliminar o Desactivar Breakpoints",id:"-eliminar-o-desactivar-breakpoints",level:2}];function d(e){const n={a:"a",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"depuraci\xf3n-con-breakpoints",children:"Depuraci\xf3n con Breakpoints"})}),"\n",(0,r.jsx)(n.p,{children:"El uso de breakpoints (puntos de interrupci\xf3n) es una t\xe9cnica fundamental para la depuraci\xf3n de c\xf3digo JavaScript. Los breakpoints permiten pausar la ejecuci\xf3n del c\xf3digo en un punto espec\xedfico y examinar el estado de las variables, el flujo de ejecuci\xf3n y la pila de llamadas. Esta t\xe9cnica es especialmente \xfatil cuando el c\xf3digo no se comporta como se espera, ya que te permite inspeccionar cada parte del proceso en detalle."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-qu\xe9-son-los-breakpoints",children:"\ud83d\uded1 \xbfQu\xe9 son los Breakpoints?"}),"\n",(0,r.jsxs)(n.p,{children:["Un ",(0,r.jsx)(n.strong,{children:"breakpoint"})," es una marca en una l\xednea de c\xf3digo que le dice al depurador que debe detenerse en esa l\xednea antes de ejecutar el c\xf3digo siguiente. Cuando la ejecuci\xf3n se detiene, puedes inspeccionar el valor de las variables, ver la pila de llamadas, e incluso cambiar el valor de algunas variables para probar diferentes escenarios."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-c\xf3mo-usar-breakpoints-en-el-inspector-de-elementos",children:"\ud83e\udde9 C\xf3mo Usar Breakpoints en el Inspector de Elementos"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Abrir las herramientas de desarrollo"}),": Aseg\xfarate de tener abiertas las herramientas de desarrollo en tu navegador y navega a la pesta\xf1a ",(0,r.jsx)(n.strong,{children:"Sources"})," (Fuentes)."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Seleccionar el archivo JavaScript"}),": En el panel de la izquierda, busca y selecciona el archivo JavaScript en el que quieres establecer el breakpoint. Puedes encontrar los archivos en la secci\xf3n de ",(0,r.jsx)(n.strong,{children:"file navigator"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Establecer el breakpoint"}),": Haz clic en el n\xfamero de l\xednea donde quieres que se detenga la ejecuci\xf3n del c\xf3digo. Esto agregar\xe1 un punto de interrupci\xf3n en esa l\xednea."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Si hay un ",(0,r.jsx)(n.strong,{children:"punto de interrupci\xf3n activo"}),", la l\xednea se resaltar\xe1 en azul."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Recargar la p\xe1gina"}),": Para activar los breakpoints, recarga la p\xe1gina o ejecuta el c\xf3digo que lleva al punto donde agregaste el breakpoint."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-c\xf3mo-funciona-la-ejecuci\xf3n-con-breakpoints",children:"\ud83d\udeb6\u200d\u2642\ufe0f C\xf3mo Funciona la Ejecuci\xf3n con Breakpoints"}),"\n",(0,r.jsx)(n.p,{children:"Cuando el c\xf3digo alcanza una l\xednea con un breakpoint, la ejecuci\xf3n se detiene y ver\xe1s que el c\xf3digo se resalta en la consola. En ese momento puedes realizar varias acciones, tales como:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Inspeccionar variables"}),": Verifica el valor de las variables en ese momento de la ejecuci\xf3n."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Paso a paso"}),': Puedes ejecutar las l\xedneas de c\xf3digo una por una usando las opciones de "Step Over", "Step Into", y "Step Out".']}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Step Over"}),": Ejecuta la l\xednea actual y se mueve a la siguiente."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Step Into"}),": Entra en una funci\xf3n llamada en la l\xednea actual."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Step Out"}),": Si est\xe1s dentro de una funci\xf3n, sale y contin\xfaa con el c\xf3digo despu\xe9s de la funci\xf3n."]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Continuar la ejecuci\xf3n"}),": Despu\xe9s de inspeccionar las variables y la pila de llamadas, puedes hacer que la ejecuci\xf3n contin\xfae normalmente con el bot\xf3n ",(0,r.jsx)(n.strong,{children:"Resume"})," o continuar paso a paso con los botones ",(0,r.jsx)(n.strong,{children:"Step"}),"."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"\ufe0f-opciones-adicionales-al-usar-breakpoints",children:"\u2699\ufe0f Opciones Adicionales al Usar Breakpoints"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Condicionales"}),": Puedes establecer breakpoints condicionales que solo se activan si una determinada condici\xf3n se cumple. Esto es \xfatil para depurar bucles o funciones que se ejecutan muchas veces."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"C\xf3mo usar"}),': Haz clic derecho en el breakpoint y selecciona "Edit breakpoint". Luego, ingresa una expresi\xf3n que debe ser verdadera para que el breakpoint se active.']}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Logpoints"}),": En lugar de detener la ejecuci\xf3n, un ",(0,r.jsx)(n.strong,{children:"logpoint"})," te permite imprimir un mensaje en la consola cuando se alcanza una l\xednea espec\xedfica sin detener el flujo de ejecuci\xf3n."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"C\xf3mo usar"}),': Haz clic derecho en el n\xfamero de l\xednea donde quieres agregar un logpoint y selecciona "Add logpoint". Escribe el mensaje que quieres ver en la consola.']}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-consejos-para-depurar-con-breakpoints",children:"\ud83e\uddd1\u200d\ud83d\udcbb Consejos para Depurar con Breakpoints"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Usa breakpoints en funciones clave"}),": Coloca breakpoints en funciones que consideres cr\xedticas para la ejecuci\xf3n, como aquellas que procesan datos importantes o interact\xfaan con elementos del DOM."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Realiza pasos breves"}),": No te apresures al usar breakpoints. T\xf3mate tu tiempo para inspeccionar cada l\xednea y cada valor de las variables antes de proceder."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Desactiva breakpoints cuando ya no los necesites"}),": Despu\xe9s de realizar la depuraci\xf3n, elimina los breakpoints innecesarios para evitar que interrumpan la ejecuci\xf3n de tu c\xf3digo en el futuro."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"-eliminar-o-desactivar-breakpoints",children:"\ud83d\udd04 Eliminar o Desactivar Breakpoints"}),"\n",(0,r.jsx)(n.p,{children:"Si ya no necesitas un breakpoint, puedes eliminarlo f\xe1cilmente:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Haz clic en el n\xfamero de l\xednea"})," del breakpoint para quitarlo."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Haz clic derecho sobre el breakpoint"}),' y selecciona "Remove breakpoint" (Eliminar breakpoint).']}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Tambi\xe9n puedes ",(0,r.jsx)(n.strong,{children:"desactivar temporalmente"}),' los breakpoints sin eliminarlos, desmarcando la casilla de "Pause on exceptions" en la barra de herramientas de la pesta\xf1a ',(0,r.jsx)(n.strong,{children:"Sources"}),"."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["\ud83c\udfaf ",(0,r.jsx)(n.strong,{children:"Siguiente paso:"})," Ahora que sabes c\xf3mo utilizar breakpoints, es hora de explorar m\xe1s herramientas de depuraci\xf3n, como las herramientas de ",(0,r.jsx)(n.strong,{children:"networking"})," y ",(0,r.jsx)(n.strong,{children:"performance"}),", en la secci\xf3n ",(0,r.jsx)(n.a,{href:"../../depuracion-avanzada/Depuracion-avanzada.md",children:"Depuraci\xf3n-avanzada"}),"."]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);